@page "/Product"
@inject ProductBusinessRules ProductBusinessRules;
@rendermode InteractiveServer

<PageTitle>Product</PageTitle>

<h1>Products</h1>
<hr />

@if (IsLoading)
{
    <p><em>Loading...</em></p>
}
else if (Products.Count() == 0)
{
    <p>No Products</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Price</th>
                <th>Description</th>
                <th>Category</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var product in Products)
            {
                <tr>
                    <td>@product.Name</td>
                    <td>@product.Price</td>
                    <td>@product.Description</td>
                    <td>@product.Category.Name</td>
                </tr>
            }
        </tbody>
    </table>
}

<ModalProductAdd></ModalProductAdd>




@code {
    private IEnumerable<Product> Products;
    private bool IsLoading = true;
    private bool showAddProductModal = false;


    protected override async Task OnInitializedAsync()
    {
        Products = await ProductBusinessRules.GetAllProductsAsync();
        IsLoading = false;
    }


}
