@inject CategoryBusinessRules CategoryBusinessRules
@inject NavigationManager Navigation
@rendermode InteractiveServer


<button type="button" class="btn btn-success form-control" @onclick="ShowAddCategoryModal"><span class="bi bi-plus-square"></span></button>

@if (showAddCategoryModal)
{
    <EditForm Model="@NewCategory" OnSubmit="AddCategory">
        <div class="modal fade show" tabindex="-1" role="dialog" style="display: block;">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Add New Category</h5>
                        <a type="button" class="close" @onclick="CloseModal">
                            <span aria-hidden="true"><i class="bi bi-x"></i></span>
                        </a>
                    </div>
                    <div class="modal-body">
                        <div class="form-group">
                            <label for="categoryName">Name:</label>
                            <input type="text" class="form-control" id="categoryName" @bind="NewCategory.Name">
                            <ValidationMessage For="() => NewCategory!.Name" />
                        </div>
                        <div class="form-group">
                            <label for="categoryDescription">Description:</label>
                            <textarea class="form-control" id="categoryDescription" rows="3" @bind="NewCategory.Description"></textarea>
                            <ValidationMessage For="() => NewCategory!.Description" />
                        </div>
                        <DataAnnotationsValidator></DataAnnotationsValidator>

                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-danger" @onclick="CloseModal">Close</button>
                        <button type="submit" class="btn btn-primary">Save Category</button>
                    </div>
                </div>
            </div>
        </div>
    </EditForm>
}


@code {

    [Parameter]
    public EventCallback<bool> UpdateList { get; set; }

    private bool showAddCategoryModal = false;

    private Category NewCategory = new();
    private async Task AddCategory()
    {
        await CategoryBusinessRules.CreateCategoryAsync(NewCategory);
        showAddCategoryModal = false;
        await UpdateList.InvokeAsync();
        NewCategory = new Category();
    }


    private void ShowAddCategoryModal()
    {
        showAddCategoryModal = true;
    }

    private void CloseModal()
    {
        showAddCategoryModal = false;
    }
}
